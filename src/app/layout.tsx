"use client";
import { ThemeProvider } from "@/components/ui/theme-provider";
import { Toaster } from "@/components/ui/toaster";
import { SpeedInsights } from "@vercel/speed-insights/next";
import { usePathname } from "next/navigation";

import "./globals.css";

const navigation = [
  { name: "Create", href: "/" },
  { name: "Library", href: "/library" },
];

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(" ");
}

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();
  return (
    <html lang="en" className="h-full w-full">
      <body className="w-full h-full">
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <div className="min-h-full">
            {/* <Disclosure as="nav" className="bg-background shadow-sm">
              {({ open }) => (
                <>
                  <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                    <div className="flex h-12 justify-between">
                      <div className="flex">
                        <div className="hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8">
                          {navigation.map((item) => (
                            <Link
                              key={item.name}
                              href={item.href}
                              className={classNames(
                                pathname === item.href
                                  ? "border-red-500 text-foreground"
                                  : "border-transparent text-muted-foreground hover:border-gray-300 hover:text-foreground",
                                "inline-flex items-center border-b-4 px-1 pt-1 text-sm font-medium"
                              )}
                              aria-current={
                                pathname === item.href ? "page" : undefined
                              }
                            >
                              {item.name}
                            </Link>
                          ))}
                        </div>
                      </div>

                      <div className="flex items-center">
                        <ThemeToggle />
                      </div>

                      <div className="-mr-2 flex items-center sm:hidden">
                        <Disclosure.Button className="relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2">
                          <span className="absolute -inset-0.5" />
                          <span className="sr-only">Open main menu</span>
                          {open ? (
                            <XMarkIcon
                              className="block h-6 w-6"
                              aria-hidden="true"
                            />
                          ) : (
                            <Bars3Icon
                              className="block h-6 w-6"
                              aria-hidden="true"
                            />
                          )}
                        </Disclosure.Button>
                      </div>
                    </div>
                  </div>

                  <Disclosure.Panel className="md:hidden">
                    <div className="space-y-1 px-2 pb-3 pt-2 sm:px-3">
                      {navigation.map((item) => (
                        <Disclosure.Button
                          key={item.name}
                          as="a"
                          href={item.href}
                          className={classNames(
                            pathname === item.href
                              ? "border-red-500 bg-red-50 text-red-700"
                              : "border-transparent text-muted-foreground hover:border-gray-300 hover:bg-accent hover:text-foreground",
                            "block border-l-4 py-2 pl-3 pr-4 text-base font-medium"
                          )}
                          aria-current={
                            pathname === item.href ? "page" : undefined
                          }
                        >
                          {item.name}
                        </Disclosure.Button>
                      ))}
                    </div>
                  </Disclosure.Panel>
                </>
              )}
            </Disclosure> */}

            <main>
              <div className="mx-auto max-w-7xl p-4 sm:p-6 lg:p-8">
                {children}
              </div>
            </main>
          </div>
          <Toaster />
        </ThemeProvider>
        <SpeedInsights />
      </body>
    </html>
  );
}
